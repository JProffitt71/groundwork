///////////////////////
//      helpers      //
///////////////////////

// clear helpers
@mixin _clear                       { clear: both;
  &:after                           { content: " "; display: block; height: 0; font-size: 0; clear: both; visibility: hidden; }
}
@mixin _clearfix                    { @include _clear; } // alias

// spacer helpers
@mixin _padded($multiple: 1)        { padding: $gutter * $multiple; }
@mixin _pad-top($multiple: 1)       { padding-top: $gutter * $multiple; }
@mixin _pad-right($multiple: 1)     { padding-right: $gutter * $multiple; }
@mixin _pad-bottom($multiple: 1)    { padding-bottom: $gutter * $multiple; }
@mixin _pad-left($multiple: 1)      { padding-left: $gutter * $multiple; }

@mixin _gapped($multiple: 1)        { margin: $gutter * $multiple; }
@mixin _gap-top($multiple: 1)       { margin-top: $gutter * $multiple; }
@mixin _gap-right($multiple: 1)     { margin-right: $gutter * $multiple; }
@mixin _gap-bottom($multiple: 1)    { margin-bottom: $gutter * $multiple; }
@mixin _gap-left($multiple: 1)      { margin-left: $gutter * $multiple; }

@mixin _offset($multiple: 1)        { margin: (-$gutter * $multiple); }
@mixin _offset-top($multiple: 1)    { margin-top: (-$gutter * $multiple); }
@mixin _offset-right($multiple: 1)  { margin-right: (-$gutter * $multiple); }
@mixin _offset-bottom($multiple: 1) { margin-bottom: (-$gutter * $multiple); }
@mixin _offset-left($multiple: 1)   { margin-left: (-$gutter * $multiple); }

@mixin _zero                        { margin:0; padding:0; }

// positioning helpers
@mixin _fixed($anchors: null) {
  position: fixed;
  @each $position in $anchors {
    @each $anchor in top, right, bottom, left {
      @if $position == $anchor {
        #{$position}: 0;
      }
    }
    @if $position == middle {
      top: 50%;
    }
    @if $position == center {
      left: 50%;
    }
  }
}
@mixin _absolute($anchors: null) {
  position: absolute;
  @each $position in $anchors {
    @each $anchor in top, right, bottom, left {
      @if $position == $anchor {
        #{$position}: 0;
      }
    }
    @if $position == middle {
      top: 50%;
    }
    @if $position == center {
      left: 50%;
    }
  }
}
@mixin _relative                  { position: relative; }
@mixin _static                    { position: static; }

// display helpers
@mixin _inline                    { display:inline; }
@mixin _inline-block              { display:inline-block; width:auto; }
@mixin _block                     { display:block; }
@mixin _hidden                    { display:none !important; }

// size helpers
@mixin _small                     { font-size:0.8em; }
@mixin _medium                    { font-size:1em; }
@mixin _large                     { font-size:1.5em; }

// style helpers
@mixin _italic                    { font-style: italic; }
@mixin _bold                      { font-weight: 900; }

// floating helpers
@mixin _pull-right                { float:right; }
@mixin _pull-left                 { float:left; }
@mixin _pull-none                 { float:none; }

// centering helper
@mixin _center                    { @include _block; margin:0 auto; }

// border helpers
@mixin _bordered                  { border: 1px solid $border-color; }
@mixin _border-top                { border-top:1px solid $border-color; }
@mixin _border-right              { border-right:1px solid $border-color; }
@mixin _border-bottom             { border-bottom:1px solid $border-color; }
@mixin _border-left               { border-left:1px solid $border-color; }

// text alignment helpers
@mixin _align-top                 { display:table-cell; vertical-align:top; } // must have height (experimental)
@mixin _align-right               { text-align:right; }
@mixin _align-bottom              { display:table-cell; vertical-align:bottom; } // must have height (experimental)
@mixin _align-left                { text-align:left; }
@mixin _align-center              { text-align:center; }
@mixin _justify                   { text-align:justify; }
@mixin _unstyled                  { margin: 0; padding: 0; list-style: none; }

// truncation helper
@mixin _truncate                  { overflow:hidden; white-space:nowrap; text-overflow:ellipsis; }

// radius helpers
@mixin _square                    { border-radius: 0; }
@mixin _rounded                   { border-radius: 9999em; }
@mixin _round                     { border-radius: 50%; }

// rotation helpers
@mixin _rotate-90                 { @include _inline-block; @include rotate(90deg); }
@mixin _rotate-180                { @include _inline-block; @include rotate(180deg); }
@mixin _rotate-270                { @include _inline-block; @include rotate(270deg); }
@mixin _rotate-360                { @include _inline-block; @include rotate(360deg); }
@mixin _rotate-90-ctr             { @include _inline-block; @include rotate(-90deg); }
@mixin _rotate-180-ctr            { @include _inline-block; @include rotate(-180deg); }
@mixin _rotate-270-ctr            { @include _inline-block; @include rotate(-270deg); }
@mixin _rotate-360-ctr            { @include _inline-block; @include rotate(-360deg); }

// responsive spacer helpers
@mixin helper_reset($properties: "padding" "margin", $spacer-helpers: $spacer-helpers) {
  @for $i from 1 through length($spacer-helpers) {
    &.#{nth($spacer-helpers, $i)},
    &.half-#{nth($spacer-helpers, $i)},
    &.double-#{nth($spacer-helpers, $i)},
    &.triple-#{nth($spacer-helpers, $i)} {
      @for $i from 1 through length($properties) {
        #{nth($properties, $i)}: 0 !important;
      }
    }
  }
}

@mixin responsive_spacer_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .zero-#{$target}                 { @include helper_reset; }

      .padded-#{$target}               { @include _padded; }
      .pad-top-#{$target}              { @include _pad-top; }
      .pad-right-#{$target}            { @include _pad-right; }
      .pad-bottom-#{$target}           { @include _pad-bottom; }
      .pad-left-#{$target}             { @include _pad-left; }

      .no-padding-#{$target},
      .not-padded-#{$target},
      .no-pad-#{$target}               { @include helper_reset(padding, $spacer-helpers: "padded" "pad-top" "pad-right" "pad-bottom" "pad-left"); }
      .no-pad-top-#{$target}           { @include _pad-top(0); }
      .no-pad-right-#{$target}         { @include _pad-right(0); }
      .no-pad-bottom-#{$target}        { @include _pad-bottom(0); }
      .no-pad-left-#{$target}          { @include _pad-left(0); }

      .gapped-#{$target}               { @include _gapped; }
      .gap-top-#{$target}              { @include _gap-top; }
      .gap-right-#{$target}            { @include _gap-right; }
      .gap-bottom-#{$target}           { @include _gap-bottom; }
      .gap-left-#{$target}             { @include _gap-left; }

      .no-margin-#{$target},
      .no-gapped-#{$target},
      .no-gap-#{$target}               { @include helper_reset(margin, $spacer-helpers: "gapped" "gap-top" "gap-right" "gap-bottom" "gap-left"); }
      .no-gap-top-#{$target}           { @include _gap-top(0); }
      .no-gap-right-#{$target}         { @include _gap-right(0); }
      .no-gap-bottom-#{$target}        { @include _gap-bottom(0); }
      .no-gap-left-#{$target}          { @include _gap-left(0); }

      .offset-#{$target}               { @include _offset; }
      .offset-top-#{$target}           { @include _offset-top; }
      .offset-right-#{$target}         { @include _offset-right; }
      .offset-bottom-#{$target}        { @include _offset-bottom; }
      .offset-left-#{$target}          { @include _offset-left; }

      .no-offset-top-#{$target}        { @include _offset-top(0); }
      .no-offset-right-#{$target}      { @include _offset-right(0); }
      .no-offset-bottom-#{$target}     { @include _offset-bottom(0); }
      .no-offset-left-#{$target}       { @include _offset-left(0); }
    }
  }
}

@mixin responsive_spacer_mods($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .half-padded-#{$target}          { @include _padded(0.5); }
      .double-padded-#{$target}        { @include _padded(2); }
      .triple-padded-#{$target}        { @include _padded(3); }

      .half-pad-top-#{$target}         { @include _pad-top(0.5); }
      .double-pad-top-#{$target}       { @include _pad-top(2); }
      .triple-pad-top-#{$target}       { @include _pad-top(3); }

      .half-pad-right-#{$target}       { @include _pad-right(0.5); }
      .double-pad-right-#{$target}     { @include _pad-right(2); }
      .triple-pad-right-#{$target}     { @include _pad-right(3); }

      .half-pad-bottom-#{$target}      { @include _pad-bottom(0.5); }
      .double-pad-bottom-#{$target}    { @include _pad-bottom(2); }
      .triple-pad-bottom-#{$target}    { @include _pad-bottom(3); }

      .half-pad-left-#{$target}        { @include _pad-left(0.5); }
      .double-pad-left-#{$target}      { @include _pad-left(2); }
      .triple-pad-left-#{$target}      { @include _pad-left(3); }

      .half-gapped-#{$target}          { @include _gapped(0.5); }
      .double-gapped-#{$target}        { @include _gapped(2); }
      .triple-gapped-#{$target}        { @include _gapped(3); }

      .half-gap-top-#{$target}         { @include _gap-top(0.5); }
      .double-gap-top-#{$target}       { @include _gap-top(2); }
      .triple-gap-top-#{$target}       { @include _gap-top(3); }

      .half-gap-right-#{$target}       { @include _gap-right(0.5); }
      .double-gap-right-#{$target}     { @include _gap-right(2); }
      .triple-gap-right-#{$target}     { @include _gap-right(3); }

      .half-gap-bottom-#{$target}      { @include _gap-bottom(0.5); }
      .double-gap-bottom-#{$target}    { @include _gap-bottom(2); }
      .triple-gap-bottom-#{$target}    { @include _gap-bottom(3); }

      .half-gap-left-#{$target}        { @include _gap-left(0.5); }
      .double-gap-left-#{$target}      { @include _gap-left(2); }
      .triple-gap-left-#{$target}      { @include _gap-left(3); }

      .half-offset-#{$target}          { @include _offset(0.5); }
      .double-offset-#{$target}        { @include _offset(2); }
      .triple-offset-#{$target}        { @include _offset(3); }

      .half-offset-top-#{$target}      { @include _offset-top(0.5); }
      .double-offset-top-#{$target}    { @include _offset-top(2); }
      .triple-offset-top-#{$target}    { @include _offset-top(3); }

      .half-offset-right-#{$target}    { @include _offset-right(0.5); }
      .double-offset-right-#{$target}  { @include _offset-right(2); }
      .triple-offset-right-#{$target}  { @include _offset-right(3); }

      .half-offset-bottom-#{$target}   { @include _offset-bottom(0.5); }
      .double-offset-bottom-#{$target} { @include _offset-bottom(2); }
      .triple-offset-bottom-#{$target} { @include _offset-bottom(3); }

      .half-offset-left-#{$target}     { @include _offset-left(0.5); }
      .double-offset-left-#{$target}   { @include _offset-left(2); }
      .triple-offset-left-#{$target}   { @include _offset-left(3); }
    }
  }
}

@mixin responsive_positioning_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .fixed-#{$target}                   { @include _fixed; }
      .fixed-top-#{$target}               { @include _fixed(top); }
      .fixed-right-#{$target}             { @include _fixed(right); }
      .fixed-bottom-#{$target}            { @include _fixed(bottom); }
      .fixed-left-#{$target}              { @include _fixed(left); }
      .fixed-middle-#{$target}            { @include _fixed(middle); }
      .fixed-center-#{$target}            { @include _fixed(center); }

      .fixed-top-right-#{$target}         { @include _fixed((top, right)); }
      .fixed-top-left-#{$target}          { @include _fixed((top, left)); }
      .fixed-top-center-#{$target}        { @include _fixed((top, center)); }
      .fixed-middle-right-#{$target}      { @include _fixed((middle, right)); }
      .fixed-middle-left-#{$target}       { @include _fixed((middle, left)); }
      .fixed-middle-center-#{$target}     { @include _fixed((middle, center)); }
      .fixed-bottom-right-#{$target}      { @include _fixed((bottom, right)); }
      .fixed-bottom-left-#{$target}       { @include _fixed((bottom, left)); }
      .fixed-bottom-center-#{$target}     { @include _fixed((bottom, center)); }

      .absolute-#{$target}                { @include _absolute; }
      .absolute-top-#{$target}            { @include _absolute(top); }
      .absolute-right-#{$target}          { @include _absolute(right); }
      .absolute-bottom-#{$target}         { @include _absolute(bottom); }
      .absolute-left-#{$target}           { @include _absolute(left); }
      .absolute-middle-#{$target}         { @include _absolute(middle); }
      .absolute-center-#{$target}         { @include _absolute(center); }

      .absolute-top-right-#{$target}      { @include _absolute((top, right)); }
      .absolute-top-left-#{$target}       { @include _absolute((top, left)); }
      .absolute-top-center-#{$target}     { @include _absolute((top, center)); }
      .absolute-middle-right-#{$target}   { @include _absolute((middle, right)); }
      .absolute-middle-left-#{$target}    { @include _absolute((middle, left)); }
      .absolute-middle-center-#{$target}  { @include _absolute((middle, center)); }
      .absolute-bottom-right-#{$target}   { @include _absolute((bottom, right)); }
      .absolute-bottom-left-#{$target}    { @include _absolute((bottom, left)); }
      .absolute-bottom-center-#{$target}  { @include _absolute((bottom, center)); }
    }
  }
}

@mixin responsive_layout_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .inline-#{$target}          { @include _inline; }
      .inline-block-#{$target}    { @include _inline-block; }
      .block-#{$target}           { @include _block; }
      .clear-#{$target}           { @include _clear; }
      .center-#{$target}          { @include _center; }
      .pull-right-#{$target}      { @include _pull-right; }
      .pull-left-#{$target}       { @include _pull-left; }
      .pull-none-#{$target}       { @include _pull-none; }
    }
  }
}

@mixin responsive_border_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .no-border-#{$target}       { border: 0; }
      .bordered-#{$target}        { @include _bordered; }
      .border-top-#{$target}      { @include _border-top; }
      .border-right-#{$target}    { @include _border-right; }
      .border-bottom-#{$target}   { @include _border-bottom; }
      .border-left-#{$target}     { @include _border-left; }
    }
  }
}

@mixin responsive_typography_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .align-top-#{$target}       { @include _align-top; }
      .align-right-#{$target}     { @include _align-right; }
      .align-bottom-#{$target}    { @include _align-bottom; }
      .align-left-#{$target}      { @include _align-left; }
      .align-center-#{$target}    { @include _align-center; }
      .justify-#{$target}         { @include _justify; }
      .truncate-#{$target}        { @include _truncate; }
    }
  }
}

@mixin responsive_rotation_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .rotate-90-#{$target}       { @include _rotate-90; }
      .rotate-90-ctr-#{$target}   { @include _rotate-90-ctr; }
      .rotate-180-#{$target}      { @include _rotate-180; }
      .rotate-180-ctr-#{$target}  { @include _rotate-180-ctr; }
      .rotate-270-#{$target}      { @include _rotate-270; }
      .rotate-270-ctr-#{$target}  { @include _rotate-270-ctr; }
      .rotate-360-#{$target}      { @include _rotate-360; }
      .rotate-360-ctr-#{$target}  { @include _rotate-360-ctr; }
    }
  }
}
@mixin responsive_size_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .small-#{$target}        { @include _small; }
      .medium-#{$target}       { @include _medium; }
      .large-#{$target}        { @include _large; }
    }
  }
}

@mixin responsive_radius_helpers($breakpoint: false, $target: false) {
  @if $breakpoint and $target {
    @media #{$breakpoint} {
      .square-#{$target}      { @include _square; }
      .rounded-#{$target}     { @include _rounded; }
      .round-#{$target}       { @include _round; }
    }
  }
}

// Output helper
@mixin output() {
  @if not $silent {
    @content;
  }
}
